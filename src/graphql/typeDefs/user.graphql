type Query {
  me: User
}

type Mutation {
  signIn(email: String!, password: String!): AuthPayload!
  signUp(name: String, email: String!, password: String!, roles: [String!]!): AuthPayload!
  createUser(name: String, email: String!, password: String!, roles: [String!]!): User!
  updateUser(id: ID!, name: String, email: String, roles: [String!]): User!
  changeUserPassword(id: ID!, password: String!): Boolean!
  removeUser(id: ID!): Boolean!
}

type OAuth {
  access_token: String!
  token_type: String!
  expires_in: Int!
}

type AuthPayload {
  token: OAuth!
  user: User!
}

type User {
  id: ID!
  email: String!
  name: String!
  roles: [String!]!
}
